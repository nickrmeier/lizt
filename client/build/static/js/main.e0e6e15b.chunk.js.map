{"version":3,"sources":["actions/types.js","actions/index.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["FETCH_USER","fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","style","margin","credits","authLinkToRoot","id","renderContent","state","Landing","textAlign","Dashboard","LiztNew","App","exact","path","component","combineReducers","action","console","log","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"qXAAaA,EAAa,aCGbC,EAAY,yDACrB,WAAeC,GAAf,eAAAC,EAAA,sEACsBC,IAAMC,IAAI,qBADhC,OACUC,EADV,OAGIJ,EAAS,CAAEK,KAAMP,EAAYQ,QAASF,EAAIG,OAH9C,2CADqB,uDAOZC,EAAc,SAACC,GAAD,8CACvB,WAAeT,GAAf,eAAAC,EAAA,sEACsBC,IAAMQ,KAAK,cAAeD,GADhD,OACUL,EADV,OAGIJ,EAAS,CAAEK,KAAMP,EAAYQ,QAASF,EAAIG,OAH9C,2CADuB,uD,gCCLrBI,E,4JACF,WAAU,IAAD,OACL,OACI,cAAC,IAAD,CACIC,KAAK,OACLC,YAAY,yBACZC,OAAQ,IACRL,MAAO,SAAAA,GAAK,OAAI,EAAKM,MAAMP,YAAYC,IACvCO,UAAWC,8GALf,SAOI,wBAAQC,UAAU,MAAlB,+B,GAVOC,aAgBRC,cAAQ,KAAMC,EAAdD,CAAuBT,GChBhCW,E,mKAEF,WACI,OAAQC,KAAKR,MAAMS,MACf,KAAK,KACD,MAAO,iBACX,KAAK,EACD,OACI,6BAAI,mBAAGC,KAAK,eAAR,iCAEZ,QACI,MAAO,CACH,6BAAY,cAAC,EAAD,KAAJ,KACR,qBAAYC,MAAO,CAAEC,OAAQ,UAA7B,sBACcJ,KAAKR,MAAMS,KAAKI,UADtB,KAGR,6BAAY,mBAAGH,KAAK,cAAR,sBAAJ,S,4BAMxB,WACI,OAAQF,KAAKR,MAAMS,MACf,KAAK,KAEL,KAAK,EACD,MAAO,IACX,QACI,MAAO,gB,oBAInB,WACI,OACI,8BACI,sBAAKN,UAAU,cAAf,UACA,mBAAGO,KAAMF,KAAKM,iBAAkBX,UAAU,aAA1C,kBACA,oBAAIY,GAAG,aAAaZ,UAAU,QAA9B,SAEKK,KAAKQ,2B,GAxCLZ,aAqDNC,mBAJf,SAAyBY,GACrB,MAAO,CAAER,KAAMQ,EAAMR,QAGVJ,CAAyBE,GC7CzBW,EAXC,WACZ,OACI,sBAAKP,MAAO,CAAEQ,UAAW,UAAzB,UACI,kDADJ,0CCIFC,EAAY,kBAAM,4CAClBC,EAAU,kBAAM,0CAEhBC,E,uKACF,WACId,KAAKR,MAAMhB,c,oBAGf,WACI,OACI,8BACI,cAAC,IAAD,UACI,gCACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOuC,OAAO,EAAMC,KAAK,IAAIC,UAAWP,IACxC,cAAC,IAAD,CAAOK,OAAO,EAAMC,KAAK,aAAaC,UAAWL,IACjD,cAAC,IAAD,CAAOI,KAAK,qBAAqBC,UAAWJ,e,GAblDjB,aAsBHC,cAAQ,KAAMC,EAAdD,CAAuBiB,GC9BvBI,cAAgB,CAC3BjB,KCDW,WAAgC,IAAvBQ,EAAsB,uDAAd,KAAMU,EAAQ,uCAE1C,OADAC,QAAQC,IAAIF,GACJA,EAAOrC,MACX,KAAKP,EACD,OAAO4C,EAAOpC,UAAW,EAC7B,QACI,OAAO0B,MCCba,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAExDC,IAASC,OACL,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJO,SAASC,cAAc,Y","file":"static/js/main.e0e6e15b.chunk.js","sourcesContent":["export const FETCH_USER = 'fetch_user';","import axios from 'axios';\nimport { FETCH_USER } from './types';\n\nexport const fetchUser = () => \n    async function(dispatch) {\n        const res = await axios.get('/api/current_user')\n        \n        dispatch({ type: FETCH_USER, payload: res.data });\n    }\n\nexport const handleToken = (token) => \n    async function(dispatch) {\n        const res = await axios.post('/api/stripe', token)\n\n        dispatch({ type: FETCH_USER, payload: res.data });\n    }","import React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nclass Payments extends Component {\n    render() {\n        return (\n            <StripeCheckout \n                name=\"Lizt\"\n                description=\"$1 for 10 Lizt Credits\"\n                amount={100}\n                token={token => this.props.handleToken(token)}\n                stripeKey={process.env.REACT_APP_STRIPE_KEY}\n            >\n                <button className='btn'>Add Credits</button>\n            </StripeCheckout>\n        );\n    }\n}\n\nexport default connect(null, actions)(Payments);","import './Header.css';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Payments from './Payments'\n\nclass Header extends Component {\n    // changes login button text based on whether user is authenticated or not\n    renderContent() {\n        switch (this.props.auth) {\n            case null: \n                return 'Still Deciding';\n            case false: \n                return (\n                    <li><a href='/auth/google'>Login with Google</a></li>\n                );\n            default:\n                return [\n                    <li key=\"1\"><Payments/></li>,\n                    <li key=\"3\" style={{ margin: '0 10px' }}>\n                        Credits: {this.props.auth.credits}\n                    </li>,\n                    <li key=\"2\"><a href='/api/logout'>Log Out</a></li>\n                ];\n        }\n    };\n\n    // changes 'homepage' based on whether user is authenticated or not\n    authLinkToRoot(){\n        switch (this.props.auth) {\n            case null: \n                return '/';\n            case false: \n                return '/';\n            default:\n                return '/dashboard';\n        }\n    }\n\n    render() {\n        return (\n            <nav>\n                <div className=\"nav-wrapper\">\n                <a href={this.authLinkToRoot()} className=\"brand-logo\">Lizt</a>\n                <ul id=\"nav-mobile\" className=\"right\">\n                    \n                    {this.renderContent()}\n\n                </ul>\n                </div>\n            </nav>\n        )\n    }\n};\n\nfunction mapStateToProps(state) {\n    return { auth: state.auth };\n}\n\nexport default connect(mapStateToProps)(Header);","import React from 'react'\n\nconst Landing = () => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <h1>\n                Welcome to Lizt! \n            </h1>\n            Make lists and send them to anyone!\n        </div>\n    )\n}\n\nexport default Landing\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport Header from './Header'\nimport Landing from './Landing'\n\nconst Dashboard = () => <h2>Dashboard</h2>\nconst LiztNew = () => <h2>LiztNew</h2>\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.fetchUser();\n    }\n\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <div>\n                        <Header/>\n                        <Route exact={true} path=\"/\" component={Landing} />\n                        <Route exact={true} path=\"/dashboard\" component={Dashboard} />\n                        <Route path=\"/dashboard/newLizt\" component={LiztNew} />\n                        \n                    </div>\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, actions)(App);","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    auth: authReducer\n})","import { FETCH_USER } from '../actions/types';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = null, action) {\n    console.log(action);\n    switch (action.type) {\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n}","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from \"./components/App\";\nimport reducers from './reducers';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.querySelector('#root')\n);\n"],"sourceRoot":""}